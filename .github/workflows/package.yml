name: Build PyInstaller Release

permissions:
  contents: write
  id-token: write

on:
  push:
    branches: [main]
    tags: ['v*']

  release:
    types: [published]

  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install UV CLI and project dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv sync

      - name: Install UPX on Linux
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y upx

      - name: Install UPX on macOS
        if: matrix.os == 'macos-latest'
        run: brew install upx

      - name: Build with PyInstaller via UV
        shell: bash
        run: |
          uv run pyinstaller \
            --noconfirm \
            --windowed \
            --onefile src/jobops/__init__.py \
            --name jobops \
            --strip \
            --upx-dir /usr/bin \
            --exclude-module PyQt6 \
            --exclude-module torch \
            --exclude-module sentence_transformers \
            --exclude-module numpy \
            --exclude-module matplotlib \
            --exclude-module pandas \
            --exclude-module scipy \
            --exclude-module sklearn \
            --exclude-module joblib

      - name: Rename output (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          Write-Host "Listing contents of dist directory:"
          Get-ChildItem -Path "dist" -Recurse
          if (Test-Path -Path "dist\jobops.exe") {
            Move-Item -Path "dist\jobops.exe" -Destination "dist\jobops-windows.exe"
          } else {
            Write-Error "File not found: dist\jobops.exe"
          }

      - name: Rename output (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          mv dist/jobops dist/jobops-linux

      - name: Rename output (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          mv dist/jobops dist/jobops-macos

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: jobops-${{ matrix.os }}
          path: dist/jobops-*

  publish_release:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'release' || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) }}
    steps:
      - name: Set release tag name
        id: set_tag
        run: |
          DATE=$(date +'%Y.%m.%d')
          echo "TAG_NAME=v${DATE}" >> $GITHUB_ENV

      - name: Download Linux build
        uses: actions/download-artifact@v4
        with:
          name: jobops-ubuntu-latest
          path: dist_linux
      - name: Download Windows build
        uses: actions/download-artifact@v4
        with:
          name: jobops-windows-latest
          path: dist_windows
      - name: Download macOS build
        uses: actions/download-artifact@v4
        with:
          name: jobops-macos-latest
          path: dist_macos
      - name: Publish to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          files: |
            dist_linux/jobops-linux
            dist_windows/jobops-windows.exe
            dist_macos/jobops-macos
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 